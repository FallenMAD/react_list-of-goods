{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverse","prevState","reset","this","goods","visibleGoods","sort","good1","good2","length","localeCompare","getReorderedGoods","className","type","classNames","onClick","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAC1BT,YAAaS,EAAUT,gBAhB7B,EAoBEU,MAAQ,WACN,EAAKN,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCW,KAAKZ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdW,EA5DH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAoBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASW,OACZ,OAAOQ,EAAME,OAASD,EAAMC,OAE9B,KAAKrB,EAASS,SACZ,OAAOU,EAAMG,cAAcF,GAE7B,QACE,OAAOpB,EAASM,SAQfF,EAAaa,EAAaL,UAAYK,EAmC7BM,CAAkBtB,EAAiB,CAAEG,aAAYC,aAE/D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaL,EAASS,WAEtCkB,QAASZ,KAAKR,mBANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaL,EAASW,SAEtCgB,QAASZ,KAAKL,aANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAASZ,KAAKH,QANhB,sBAYGR,GAAcC,IAAaL,EAASM,OACnC,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKD,MAHhB,sBAWN,6BACE,6BACGE,EAAMY,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAlFrB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf37b016.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  // if (isReversed) {\n  //   visibleGoods.reverse();\n  // }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (isReversed || sortType !== SortType.NONE) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(item => (\n              <li\n                data-cy=\"Good\"\n                key={item}\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}